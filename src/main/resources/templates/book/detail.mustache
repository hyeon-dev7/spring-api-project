{{>layouts/header}}
{{#book}}
    <div id="bookInfo" {{#book.id}} data-book-id="{{book.id}}" {{/book.id}}
         data-title="{{book.title}}" data-author="{{book.author}}" data-publisher="{{book.publisher}}"
        {{#book.image}} data-image="{{book.image}}" {{/book.image}}
        {{#book.isbn}} data-isbn="{{book.isbn}}" {{/book.isbn}}>
    </div>

    <div style="display: flex; justify-content: center; align-items: center; padding: 1.5rem;">
        <div class="card mb-3"
             style="max-width: 700px; width: 100%; padding: 0.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1); border-radius: 12px;">
            <div class="row g-0">
                <div class="col-md-4 d-flex align-items-center justify-content-center" style="padding: 1rem;">
                    {{#image}}
                        <img src="{{image}}" class="img-fluid rounded" style="max-height: 200px; object-fit: cover;">
                    {{/image}}
                    {{^image}}
                        <img src="https://placehold.co/120x150?text=No+Image" class="img-fluid rounded"
                             style="max-height: 200px; object-fit: cover;">
                    {{/image}}
                </div>
                <div class="col-md-8">
                    <div class="card-body" style="line-height: 1.6;">
                        <h5 class="card-title mb-3"> {{title}} </h5>
                        <p class="card-text mb-2">작가 : {{author}}</p>
                        <p class="card-text mb-2">출판사 : {{publisher}}</p>
                        {{#callNumber}}
                            <p class="card-text mb-2"> {{location}} > {{callNumber}}</p>
                        {{/callNumber}}
                        <p class="card-text" style="max-height: 150px; overflow-y: auto; padding-right: 5px;">
                            <small class="text-body-secondary"> {{description}} </small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {{#callNumber}}
        <div class="container" style="margin-top: 1.5rem;">
            <div class="buttons">
                <button id="btn1" class="btn">한줄평</button>
                <button id="btn2" class="btn">분기별 대출 횟수</button>
            </div>
            <div id="tab2" class="tab-content">
                <div id="chart-container" style="display: flex; justify-content: center;">
                    <canvas id="borrowedCntChart" style="width: 100%; max-width: 600px;"></canvas>
                </div>
            </div>
        </div>
    {{/callNumber}}

    <div id="tab1" class="tab-content">
        <div class="container">
            {{#reviewed}}
                <table class="table table-hover align-middle mt-4 mb-4">
                    <thead>
                    <tr>
                        <th style="width: 8rem;">작성자</th>
                        <th style="max-width: 650px;">내용</th>
                        <th style="width: 6rem;">별점</th>
                        <th style="width: 8rem;">작성일</th>
                    </tr>
                    </thead>
                    <tbody>
                    {{#reviews}}
                        <tr>
                            <td>{{nickname}}</td>
                            <td style="word-break: break-word; white-space: pre-wrap;">{{content}}</td>
                            <td data-stars="{{stars}}" class="starsArea"></td>
                            <td style="font-size:0.8rem;">{{createdDate}}</td>
                        </tr>
                    {{/reviews}}
                    </tbody>
                </table>
            {{/reviewed}}
        </div>


        {{^reviewed}}
            <div class="text-center text-muted" style="margin-top:2rem;">아직 후기가 없습니다.</div>
        {{/reviewed}}

        <!-- 로그인 여부에 따라 작성란 또는 안내 문구 -->
        {{#userDTO}}
            <div class="container"> {{>book/reviewForm}} </div>
        {{/userDTO}}

        {{^userDTO}}
            <div class="text-center text-muted mt-2 mb-2">
                <strong role="button" class="text-dark" style="cursor: pointer;"
                        data-bs-toggle="modal" data-bs-target="#loginModal">
                    로그인</strong>하여 후기를 남겨보세요!
            </div>
        {{/userDTO}}
        <ul class="pagination justify-content-center" id="pagination">
        </ul>
    </div>
{{/book}}

<!-- 로그인 모달 -->
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-center w-100" id="loginModalLabel">로그인</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
            </div>
            <div class="modal-body">
                <div class="modal-body text-center px-4 py-3">
                    <form id="loginForm" class="text-start">
                        <div class="mb-3" style="display: flex; align-items: center;">
                            <label for="username" class="form-label mb-0"
                                   style="width: 80px; font-size: 0.9rem; margin-right: 8px;">아이디</label>
                            <input type="text" class="form-control" id="username" required
                                   style="height: 42px; font-size: 0.9rem;">
                        </div>
                        <div class="mb-3" style="display: flex; align-items: center;">
                            <label for="password" class="form-label mb-0"
                                   style="width: 80px; font-size: 0.9rem; margin-right: 8px;">비밀번호</label>
                            <input type="password" class="form-control" id="password" required
                                   style="height: 42px; font-size: 0.9rem;">
                        </div>
                        <button type="submit" class="btn btn-outline-dark w-100 mt-3"
                                style="height: 42px; font-size: 0.95rem;">로그인
                        </button>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>
{{>layouts/footer}}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        drawStars();
        const btn1 = document.getElementById("btn1");
        const btn2 = document.getElementById("btn2");
        const tab1 = document.getElementById("tab1");
        const tab2 = document.getElementById("tab2");

        if (btn1 && btn2 && tab2) {
            // 탭 구조 활성화
            tab1.style.display = "block";
            tab2.style.display = "none";
            setActiveButtonById("btn1");

            btn1.addEventListener("click", () => {
                tab1.style.display = "block";
                tab2.style.display = "none";
                setActiveButtonById("btn1");
            });

            btn2.addEventListener("click", () => {
                tab1.style.display = "none";
                tab2.style.display = "block";
                setActiveButtonById("btn2");

                if (!window.chartDrawn) {
                    const popularityData = {{&book.popularityJson}};
                    const recentData = popularityData.slice(-12);

                    drawChart({
                        jsonData: recentData, labelKey: "quarter", valueKey: "counts",
                        canvasId: "borrowedCntChart", chartContainerId: "chart-container", chartType: "bar",
                        chartTitle: "", datasetLabel: "대출 횟수", xAxisLabel: "연도-분기", yAxisLabel: "대출 횟수",
                        noDataMessage: "해당 도서의 대출 정보가 없습니다."
                    });

                    window.chartDrawn = true; // 중복 실행 방지
                }
            });
        } else {
            // 탭 없이 리뷰만 보여주는 경우
            tab1.style.display = "block";
        }

        // 페이지네이션 렌더링
        const currentPage = {{&book.currentPage}};
        const totalPages = {{&book.totalPages}};
        if (totalPages > 1) {
            renderPagination(currentPage, totalPages, onPageClick);
        }
    });

    function onPageClick(page) {
        const url = new URL(window.location.href);
        url.searchParams.set("page", page); // page 파라미터 설정
        window.location.href = url.toString(); // 새 URL로 이동
    }

    document.getElementById("loginForm").addEventListener("submit", (e) => {
        e.preventDefault();

        const currentPage = window.location.href; // 현재 페이지 URL 가져오기

        const loginData = {
            "username": document.getElementById("username").value,
            "password": document.getElementById("password").value
        };
        fetch("/api/auth/login?redirect=" + currentPage, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(loginData)
        }).then(res => res.json())
                .then(resData => {
                    if (resData.success) {
                        // 모달 숨기기
                        document.getElementById('loginModal').classList.remove('show');
                        document.body.classList.remove('modal-open');
                        document.querySelector('.modal-backdrop').remove();
                        window.location.href = resData.redirect || currentPage;
                    } else {
                        // 로그인 실패 시 모달 유지, 실패 메시지 띄우기
                        alert(resData.message);
                    }
                })
                .catch(() => {
                    alert("서버 오류가 발생했습니다.");
                });
    });

    document.getElementById("reviewSubmitBtn").addEventListener("click", async (e) => {
        e.preventDefault();  // form submit 기본 동작 방지

        const content = document.getElementById("content").value;

        const book = document.getElementById('bookInfo');
        const bookId = bookInfo.hasAttribute("data-book-id")
                ? bookInfo.getAttribute("data-book-id") : null;

        let bookData = {}
        if (bookId == null) {
            const author = bookInfo.getAttribute("data-author");
            const publisher = bookInfo.getAttribute("data-publisher");
            const image = bookInfo.hasAttribute("data-image")
                    ? bookInfo.getAttribute("data-image") : null;
            const isbn = bookInfo.hasAttribute("data-isbn")
                    ? bookInfo.getAttribute("data-isbn") : null;

            bookData = {
                "title": book.dataset.title, "isbn": isbn,
                "author": author, "image": image, "publisher": publisher
            }
        }

        let idx = null;
        let keyword = null;
        if (bookId == null) {
            const pathParts = window.location.pathname.split('/');
            // ["~~", "book", "detail", "idx", "keyword", "page"]

            if (pathParts.length === 6) {
                idx = parseInt(pathParts[3]);
                keyword = decodeURIComponent(pathParts[4]);
            }
        }

        clearFieldErrors(["content", "stars"]);
        try {
            const response = await fetch("/api/review/create", {
                method: "POST",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify({
                    "content": content, "stars": getStarsValue(), "bookId": bookId,
                    // "content": content, "stars": parseInt(selectedValue), "bookId": bookId,
                    "keyword": keyword, "idx": idx, "bookData": bookData
                })
            });

            if (response.ok) {
                location.reload();
            } else {
                const errorData = await response.json();
                showValidationErrors(errorData);
                // 한줄평 입력 유지
                document.getElementById("content").value = content;
            }
        } catch (error) {
            alert("오류가 발생했습니다. 다시 시도해주세요.");
        }
    });

</script>